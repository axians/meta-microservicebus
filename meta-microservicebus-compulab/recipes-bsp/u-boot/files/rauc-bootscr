echo "*******************************************************"
echo "*              Dual-boot script                       *"
echo "*******************************************************"

# Create and set variables if missing
test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B"
test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3
test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3

# Do not run script is boot from SD-Card
if test "${mmcblk}" = "2"; then

  echo "Running bootscript for internal eMMC"

  setenv bootargs
  
  # Set bootargs to chose rootfs to load at boot
  for BOOT_SLOT in "${BOOT_ORDER}"; do
    if test "x${bootargs}" != "x"; then
      # skip remaining slots
    elif test "x${BOOT_SLOT}" = "xA"; then
      if test ${BOOT_A_LEFT} -gt 0; then
        setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1
        echo "Found valid slot A, ${BOOT_A_LEFT} attempts remaining"

	# Set rootfs partition and RAUC slot name
        setenv bootargs "console=${console},${baudrate} earlyprintk root=/dev/mmcblk${mmcblk}p2 rootwait rw rauc.slot=A" 

	# Load kernel and device tree from rootfs
        setenv loadkernelmmc "load mmc 1:2 ${loadaddr} boot/${kernel}"
        setenv loadfdtmmc "load mmc 1:2 ${fdtaddr} boot/${fdtfile}"
      fi
    elif test "x${BOOT_SLOT}" = "xB"; then
      if test ${BOOT_B_LEFT} -gt 0; then
        setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1
        echo "Found valid slot B, ${BOOT_B_LEFT} attempts remaining"

	# Set rootfs partition and RAUC slot name
        setenv bootargs "console=${console},${baudrate} earlyprintk root=/dev/mmcblk${mmcblk}p3 rootwait rw rauc.slot=B"
	
	# Load kernel and device tree from rootfs
        setenv loadkernelmmc "load mmc 1:3 ${loadaddr} boot/${kernel}"
        setenv loadfdtmmc "load mmc 1:3 ${fdtaddr} boot/${fdtfile}"
      fi
    fi
  done
  
  if test -n "${bootargs}"; then
    saveenv
  else
    echo "No valid slot found, resetting tries to 3"
    setenv BOOT_A_LEFT 3
    setenv BOOT_B_LEFT 3
    saveenv
    reset
  fi
  
  # Check if mmc is available
  if run mmc_config; then
      # Kernel is loaded from rootfs as selected above
      if run loadkernelmmc; then
	  # Device tree is loaded from rootfs as selected above
          if run loadfdtmmc; then
              echo Booting kenerl ${loadkernelmmc} with args=${bootargs} and device tree ${loadfdtmmc};
              # Boot with bootargs above
              run doboot;
          fi;
      fi;
  fi;
  
fi; # End if for internal eMMC
